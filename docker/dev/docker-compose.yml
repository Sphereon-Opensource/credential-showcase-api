services:
  credential-showcase-api-server:
    build:
      context: ../..
      dockerfile: ./docker/dev/credential-showcase-api-server/Dockerfile
    restart: unless-stopped
    networks:
      - messagebroker_net
      - db_net
    environment:
      # Only include variables this service needs
      - NODE_PORT=3000
      - DATABASE_URL=${DATABASE_URL}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - APP_NAME=${APP_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "${API_PORT}:${API_PORT:-3000}"

  credential-showcase-traction-adapter:
    build:
      context: ../..
      dockerfile: ./docker/dev/credential-showcase-traction-adapter/Dockerfile
    restart: unless-stopped
    networks:
      - messagebroker_net

    environment:
      - NODE_PORT=3000
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
      - APP_NAME=${APP_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      - rabbitmq  # Ensure RabbitMQ starts first

  postgres:
    image: postgres:16
    restart: unless-stopped
    networks:
      - db_net
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT:-5432}:5432"  # Expose Postgres port, default 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:4-management  # Using RabbitMQ 4.x with management plugin
    restart: unless-stopped
    networks:
      - messagebroker_net
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MGMT_PORT}:15672"

volumes:
  postgres_data:  # Named volume for Postgres data persistence

networks:
  messagebroker_net:
    driver: bridge
    name: messagebroker_net
    internal: false # This makes the network isolated from other docker projects
  db_net:
    driver: bridge
    name: db_net
    internal: false