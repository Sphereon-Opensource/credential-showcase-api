/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Asset } from './Asset';
import {
    AssetFromJSON,
    AssetFromJSONTyped,
    AssetToJSON,
    AssetToJSONTyped,
} from './Asset';

/**
 * 
 * @export
 * @interface Persona
 */
export interface Persona {
    /**
     * Unique identifier for the persona
     * @type {string}
     * @memberof Persona
     */
    id?: string;
    /**
     * Name of the persona
     * @type {string}
     * @memberof Persona
     */
    name: string;
    /**
     * Role of the persona in the system
     * @type {string}
     * @memberof Persona
     */
    role: string;
    /**
     * Detailed description of the persona
     * @type {string}
     * @memberof Persona
     */
    description?: string;
    /**
     * 
     * @type {Asset}
     * @memberof Persona
     */
    headshotImage?: Asset;
    /**
     * 
     * @type {Asset}
     * @memberof Persona
     */
    bodyImage?: Asset;
}

/**
 * Check if a given object implements the Persona interface.
 */
export function instanceOfPersona(value: object): value is Persona {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function PersonaFromJSON(json: any): Persona {
    return PersonaFromJSONTyped(json, false);
}

export function PersonaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Persona {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'role': json['role'],
        'description': json['description'] == null ? undefined : json['description'],
        'headshotImage': json['headshot_image'] == null ? undefined : AssetFromJSON(json['headshot_image']),
        'bodyImage': json['body_image'] == null ? undefined : AssetFromJSON(json['body_image']),
    };
}

export function PersonaToJSON(json: any): Persona {
    return PersonaToJSONTyped(json, false);
}

export function PersonaToJSONTyped(value?: Persona | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'role': value['role'],
        'description': value['description'],
        'headshot_image': AssetToJSON(value['headshotImage']),
        'body_image': AssetToJSON(value['bodyImage']),
    };
}

